#log4j.rootLogger=debug, stdout
log4j.rootLogger=info, stdout

### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %t %c{1}:%L - %m%n

#log4j.appender.chainsaw=org.apache.log4j.RollingFileAppender
#log4j.appender.chainsaw.File=out.xml
#log4j.appender.chainsaw.Append=false
#log4j.appender.chainsaw.Threshold=debug
#log4j.appender.chainsaw.MaxFileSize=10MB
#log4j.appender.chainsaw.MaxBackupIndex=2
#log4j.appender.chainsaw.layout=org.apache.log4j.xml.XMLLayout

### set log levels - for more verbose logging change 'info' to 'debug' ###

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace

### enable spring
log4j.logger.org.springframework=debug
log4j.logger.org.springframework.transaction=debug
log4j.logger.org.springframework.jdbc.core=debug
log4j.logger.org.springframework.orm=debug

###  debug your specific package or classes with the following example
log4j.logger.org.springframework.jdbc=debug
log4j.logger.org.springframework.batch=debug
log4j.logger.org.springframework.batch.sample=debug

log4j.logger.org.hibernate=INFO

# Log JDBC bind parameter runtime arguments
log4j.logger.org.hibernate.type=trace

log4j.logger.org.hibernate.SQL=trace
log4j.logger.org.hibernate.engine.query=trace
#log4j.logger.org.hibernate.type=trace
log4j.logger.org.hibernate.jdbc=trace
